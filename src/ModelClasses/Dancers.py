from src.LearningModelClasses.LearningModel import LearningModel
from src.ModelClasses.IDancer import IDancer
from src.RewardClasses.IReward import IReward
from src.LearningModelClasses.ILearningModel import ILearningModel
from src.Containers.QMatrix import QMatrix
import numpy as np
import pandas as pd

from src.RewardClasses.RewardN import Reward


class Dancer(IDancer):

    def __init__(self,
                 dancer_id: int,
                 learning_model: ILearningModel,
                 reward_model: IReward,
                 actions: dict[str],
                 states: dict[str: list[tuple]],
                 dancers: dict):
        self._learning_model = learning_model
        self._reward_model = reward_model
        self._actions = actions
        self._states = states
        self._id = dancer_id
        self._dancers = dancers

        for act in self._actions.keys():
            if self._actions[act]:
                states_val = list(dancers.keys())
                self._Q[act] = QMatrix(self._states[act], states_val)
            else:
                states_val = list(dancers.keys())
                states_val.pop(self._id)
                #states_val = list(map(str, states_val))
                #print(states_val)
                self._Q[act] = QMatrix(states=self._states[act], actions=states_val)

    def __str__(self):
        return f"{self._id}: Dancer(IDancer)"

    def set_action(self, state: dict[str: tuple]):
        #print(self._Q["Dance"].loc[[state["Dance"]]])
        action = {}
        for act in state.keys():
            state_val = self._Q[act].loc[[state[act]]].to_numpy().reshape((-1))
            #print(state_val)
            action_index = np.where(state_val.max() == state_val)[0][0]
            action[act] = self._Q[act].actions[action_index]
        self._action = action

    @property
    def action(self):
        return self._action

    def update_q(self, state: dict[str: tuple]):
        reward = self._reward_model.reward(state=state, action=self.action)
        self._Q = self._learning_model.fit(state=state, action=self.action, q_matrix=self._Q, reward=reward)


class People(IDancer):

    def __init__(self,
                 dancer_id: int,
                 actions: dict[str],
                 states: dict[str: list[tuple]],
                 learning_model: ILearningModel=None,
                 reward_model: IReward=None,
                 dancers: dict=None
                 ):

        self._actions = actions
        self._states = states
        self._dancers = dancers


    def __str__(self):
        return "People(IDancer)"

    def set_action(self, state: list[str]):
        res_act = {}

        for i, val in enumerate(self._actions.keys()):
            act_string = "Введите номер действия:\n"
            for j, dancer in enumerate(self._dancers.keys()):
                act_string += f"{j} – {val} with {dancer}\n"
            act_string += "Ввод: "
            act_number = int(input(act_string))
            #act_string = acts[act_number]
            if act_number not in np.arange(len(self._dancers.keys())):
                print("Неверный номер действия! Повторите ввод.")
                return self.commit_act(state)
            res_act[val] = act_number

        self._action = res_act

    @property
    def action(self):
        return self._action

    def update_q(self, state: dict[str: tuple]):
        pass


if __name__ == "__main__":

    Actions = {'Invite': False, 'Dance': True}
    States = {'Invite': [(1, 0, 0, 0), (1, 0, 0, 1), (1, 0, 0, 2), (1, 0, 0, -1), (1, 0, 1, 0), (1, 0, 1, 1), (1, 0, 1, 2), (1, 0, 1, -1), (1, 0, 3, 0), (1, 0, 3, 1), (1, 0, 3, 2), (1, 0, 3, -1), (1, 0, -1, 0), (1, 0, -1, 1), (1, 0, -1, 2), (1, 0, -1, -1), (1, 2, 0, 0), (1, 2, 0, 1), (1, 2, 0, 2), (1, 2, 0, -1), (1, 2, 1, 0), (1, 2, 1, 1), (1, 2, 1, 2), (1, 2, 1, -1), (1, 2, 3, 0), (1, 2, 3, 1), (1, 2, 3, 2), (1, 2, 3, -1), (1, 2, -1, 0), (1, 2, -1, 1), (1, 2, -1, 2), (1, 2, -1, -1), (1, 3, 0, 0), (1, 3, 0, 1), (1, 3, 0, 2), (1, 3, 0, -1), (1, 3, 1, 0), (1, 3, 1, 1), (1, 3, 1, 2), (1, 3, 1, -1), (1, 3, 3, 0), (1, 3, 3, 1), (1, 3, 3, 2), (1, 3, 3, -1), (1, 3, -1, 0), (1, 3, -1, 1), (1, 3, -1, 2), (1, 3, -1, -1), (1, -1, 0, 0), (1, -1, 0, 1), (1, -1, 0, 2), (1, -1, 0, -1), (1, -1, 1, 0), (1, -1, 1, 1), (1, -1, 1, 2), (1, -1, 1, -1), (1, -1, 3, 0), (1, -1, 3, 1), (1, -1, 3, 2), (1, -1, 3, -1), (1, -1, -1, 0), (1, -1, -1, 1), (1, -1, -1, 2), (1, -1, -1, -1), (2, 0, 0, 0), (2, 0, 0, 1), (2, 0, 0, 2), (2, 0, 0, -1), (2, 0, 1, 0), (2, 0, 1, 1), (2, 0, 1, 2), (2, 0, 1, -1), (2, 0, 3, 0), (2, 0, 3, 1), (2, 0, 3, 2), (2, 0, 3, -1), (2, 0, -1, 0), (2, 0, -1, 1), (2, 0, -1, 2), (2, 0, -1, -1), (2, 2, 0, 0), (2, 2, 0, 1), (2, 2, 0, 2), (2, 2, 0, -1), (2, 2, 1, 0), (2, 2, 1, 1), (2, 2, 1, 2), (2, 2, 1, -1), (2, 2, 3, 0), (2, 2, 3, 1), (2, 2, 3, 2), (2, 2, 3, -1), (2, 2, -1, 0), (2, 2, -1, 1), (2, 2, -1, 2), (2, 2, -1, -1), (2, 3, 0, 0), (2, 3, 0, 1), (2, 3, 0, 2), (2, 3, 0, -1), (2, 3, 1, 0), (2, 3, 1, 1), (2, 3, 1, 2), (2, 3, 1, -1), (2, 3, 3, 0), (2, 3, 3, 1), (2, 3, 3, 2), (2, 3, 3, -1), (2, 3, -1, 0), (2, 3, -1, 1), (2, 3, -1, 2), (2, 3, -1, -1), (2, -1, 0, 0), (2, -1, 0, 1), (2, -1, 0, 2), (2, -1, 0, -1), (2, -1, 1, 0), (2, -1, 1, 1), (2, -1, 1, 2), (2, -1, 1, -1), (2, -1, 3, 0), (2, -1, 3, 1), (2, -1, 3, 2), (2, -1, 3, -1), (2, -1, -1, 0), (2, -1, -1, 1), (2, -1, -1, 2), (2, -1, -1, -1), (3, 0, 0, 0), (3, 0, 0, 1), (3, 0, 0, 2), (3, 0, 0, -1), (3, 0, 1, 0), (3, 0, 1, 1), (3, 0, 1, 2), (3, 0, 1, -1), (3, 0, 3, 0), (3, 0, 3, 1), (3, 0, 3, 2), (3, 0, 3, -1), (3, 0, -1, 0), (3, 0, -1, 1), (3, 0, -1, 2), (3, 0, -1, -1), (3, 2, 0, 0), (3, 2, 0, 1), (3, 2, 0, 2), (3, 2, 0, -1), (3, 2, 1, 0), (3, 2, 1, 1), (3, 2, 1, 2), (3, 2, 1, -1), (3, 2, 3, 0), (3, 2, 3, 1), (3, 2, 3, 2), (3, 2, 3, -1), (3, 2, -1, 0), (3, 2, -1, 1), (3, 2, -1, 2), (3, 2, -1, -1), (3, 3, 0, 0), (3, 3, 0, 1), (3, 3, 0, 2), (3, 3, 0, -1), (3, 3, 1, 0), (3, 3, 1, 1), (3, 3, 1, 2), (3, 3, 1, -1), (3, 3, 3, 0), (3, 3, 3, 1), (3, 3, 3, 2), (3, 3, 3, -1), (3, 3, -1, 0), (3, 3, -1, 1), (3, 3, -1, 2), (3, 3, -1, -1), (3, -1, 0, 0), (3, -1, 0, 1), (3, -1, 0, 2), (3, -1, 0, -1), (3, -1, 1, 0), (3, -1, 1, 1), (3, -1, 1, 2), (3, -1, 1, -1), (3, -1, 3, 0), (3, -1, 3, 1), (3, -1, 3, 2), (3, -1, 3, -1), (3, -1, -1, 0), (3, -1, -1, 1), (3, -1, -1, 2), (3, -1, -1, -1), (-1, 0, 0, 0), (-1, 0, 0, 1), (-1, 0, 0, 2), (-1, 0, 0, -1), (-1, 0, 1, 0), (-1, 0, 1, 1), (-1, 0, 1, 2), (-1, 0, 1, -1), (-1, 0, 3, 0), (-1, 0, 3, 1), (-1, 0, 3, 2), (-1, 0, 3, -1), (-1, 0, -1, 0), (-1, 0, -1, 1), (-1, 0, -1, 2), (-1, 0, -1, -1), (-1, 2, 0, 0), (-1, 2, 0, 1), (-1, 2, 0, 2), (-1, 2, 0, -1), (-1, 2, 1, 0), (-1, 2, 1, 1), (-1, 2, 1, 2), (-1, 2, 1, -1), (-1, 2, 3, 0), (-1, 2, 3, 1), (-1, 2, 3, 2), (-1, 2, 3, -1), (-1, 2, -1, 0), (-1, 2, -1, 1), (-1, 2, -1, 2), (-1, 2, -1, -1), (-1, 3, 0, 0), (-1, 3, 0, 1), (-1, 3, 0, 2), (-1, 3, 0, -1), (-1, 3, 1, 0), (-1, 3, 1, 1), (-1, 3, 1, 2), (-1, 3, 1, -1), (-1, 3, 3, 0), (-1, 3, 3, 1), (-1, 3, 3, 2), (-1, 3, 3, -1), (-1, 3, -1, 0), (-1, 3, -1, 1), (-1, 3, -1, 2), (-1, 3, -1, -1), (-1, -1, 0, 0), (-1, -1, 0, 1), (-1, -1, 0, 2), (-1, -1, 0, -1), (-1, -1, 1, 0), (-1, -1, 1, 1), (-1, -1, 1, 2), (-1, -1, 1, -1), (-1, -1, 3, 0), (-1, -1, 3, 1), (-1, -1, 3, 2), (-1, -1, 3, -1), (-1, -1, -1, 0), (-1, -1, -1, 1), (-1, -1, -1, 2), (-1, -1, -1, -1)], 'Dance': [(0, 0, 0, 0), (0, 0, 0, 1), (0, 0, 0, 2), (0, 0, 0, 3), (0, 0, 0, -1), (0, 0, 1, 0), (0, 0, 1, 1), (0, 0, 1, 2), (0, 0, 1, 3), (0, 0, 1, -1), (0, 0, 2, 0), (0, 0, 2, 1), (0, 0, 2, 2), (0, 0, 2, 3), (0, 0, 2, -1), (0, 0, 3, 0), (0, 0, 3, 1), (0, 0, 3, 2), (0, 0, 3, 3), (0, 0, 3, -1), (0, 0, -1, 0), (0, 0, -1, 1), (0, 0, -1, 2), (0, 0, -1, 3), (0, 0, -1, -1), (0, 1, 0, 0), (0, 1, 0, 1), (0, 1, 0, 2), (0, 1, 0, 3), (0, 1, 0, -1), (0, 1, 1, 0), (0, 1, 1, 1), (0, 1, 1, 2), (0, 1, 1, 3), (0, 1, 1, -1), (0, 1, 2, 0), (0, 1, 2, 1), (0, 1, 2, 2), (0, 1, 2, 3), (0, 1, 2, -1), (0, 1, 3, 0), (0, 1, 3, 1), (0, 1, 3, 2), (0, 1, 3, 3), (0, 1, 3, -1), (0, 1, -1, 0), (0, 1, -1, 1), (0, 1, -1, 2), (0, 1, -1, 3), (0, 1, -1, -1), (0, 2, 0, 0), (0, 2, 0, 1), (0, 2, 0, 2), (0, 2, 0, 3), (0, 2, 0, -1), (0, 2, 1, 0), (0, 2, 1, 1), (0, 2, 1, 2), (0, 2, 1, 3), (0, 2, 1, -1), (0, 2, 2, 0), (0, 2, 2, 1), (0, 2, 2, 2), (0, 2, 2, 3), (0, 2, 2, -1), (0, 2, 3, 0), (0, 2, 3, 1), (0, 2, 3, 2), (0, 2, 3, 3), (0, 2, 3, -1), (0, 2, -1, 0), (0, 2, -1, 1), (0, 2, -1, 2), (0, 2, -1, 3), (0, 2, -1, -1), (0, 3, 0, 0), (0, 3, 0, 1), (0, 3, 0, 2), (0, 3, 0, 3), (0, 3, 0, -1), (0, 3, 1, 0), (0, 3, 1, 1), (0, 3, 1, 2), (0, 3, 1, 3), (0, 3, 1, -1), (0, 3, 2, 0), (0, 3, 2, 1), (0, 3, 2, 2), (0, 3, 2, 3), (0, 3, 2, -1), (0, 3, 3, 0), (0, 3, 3, 1), (0, 3, 3, 2), (0, 3, 3, 3), (0, 3, 3, -1), (0, 3, -1, 0), (0, 3, -1, 1), (0, 3, -1, 2), (0, 3, -1, 3), (0, 3, -1, -1), (0, -1, 0, 0), (0, -1, 0, 1), (0, -1, 0, 2), (0, -1, 0, 3), (0, -1, 0, -1), (0, -1, 1, 0), (0, -1, 1, 1), (0, -1, 1, 2), (0, -1, 1, 3), (0, -1, 1, -1), (0, -1, 2, 0), (0, -1, 2, 1), (0, -1, 2, 2), (0, -1, 2, 3), (0, -1, 2, -1), (0, -1, 3, 0), (0, -1, 3, 1), (0, -1, 3, 2), (0, -1, 3, 3), (0, -1, 3, -1), (0, -1, -1, 0), (0, -1, -1, 1), (0, -1, -1, 2), (0, -1, -1, 3), (0, -1, -1, -1), (1, 0, 0, 0), (1, 0, 0, 1), (1, 0, 0, 2), (1, 0, 0, 3), (1, 0, 0, -1), (1, 0, 1, 0), (1, 0, 1, 1), (1, 0, 1, 2), (1, 0, 1, 3), (1, 0, 1, -1), (1, 0, 2, 0), (1, 0, 2, 1), (1, 0, 2, 2), (1, 0, 2, 3), (1, 0, 2, -1), (1, 0, 3, 0), (1, 0, 3, 1), (1, 0, 3, 2), (1, 0, 3, 3), (1, 0, 3, -1), (1, 0, -1, 0), (1, 0, -1, 1), (1, 0, -1, 2), (1, 0, -1, 3), (1, 0, -1, -1), (1, 1, 0, 0), (1, 1, 0, 1), (1, 1, 0, 2), (1, 1, 0, 3), (1, 1, 0, -1), (1, 1, 1, 0), (1, 1, 1, 1), (1, 1, 1, 2), (1, 1, 1, 3), (1, 1, 1, -1), (1, 1, 2, 0), (1, 1, 2, 1), (1, 1, 2, 2), (1, 1, 2, 3), (1, 1, 2, -1), (1, 1, 3, 0), (1, 1, 3, 1), (1, 1, 3, 2), (1, 1, 3, 3), (1, 1, 3, -1), (1, 1, -1, 0), (1, 1, -1, 1), (1, 1, -1, 2), (1, 1, -1, 3), (1, 1, -1, -1), (1, 2, 0, 0), (1, 2, 0, 1), (1, 2, 0, 2), (1, 2, 0, 3), (1, 2, 0, -1), (1, 2, 1, 0), (1, 2, 1, 1), (1, 2, 1, 2), (1, 2, 1, 3), (1, 2, 1, -1), (1, 2, 2, 0), (1, 2, 2, 1), (1, 2, 2, 2), (1, 2, 2, 3), (1, 2, 2, -1), (1, 2, 3, 0), (1, 2, 3, 1), (1, 2, 3, 2), (1, 2, 3, 3), (1, 2, 3, -1), (1, 2, -1, 0), (1, 2, -1, 1), (1, 2, -1, 2), (1, 2, -1, 3), (1, 2, -1, -1), (1, 3, 0, 0), (1, 3, 0, 1), (1, 3, 0, 2), (1, 3, 0, 3), (1, 3, 0, -1), (1, 3, 1, 0), (1, 3, 1, 1), (1, 3, 1, 2), (1, 3, 1, 3), (1, 3, 1, -1), (1, 3, 2, 0), (1, 3, 2, 1), (1, 3, 2, 2), (1, 3, 2, 3), (1, 3, 2, -1), (1, 3, 3, 0), (1, 3, 3, 1), (1, 3, 3, 2), (1, 3, 3, 3), (1, 3, 3, -1), (1, 3, -1, 0), (1, 3, -1, 1), (1, 3, -1, 2), (1, 3, -1, 3), (1, 3, -1, -1), (1, -1, 0, 0), (1, -1, 0, 1), (1, -1, 0, 2), (1, -1, 0, 3), (1, -1, 0, -1), (1, -1, 1, 0), (1, -1, 1, 1), (1, -1, 1, 2), (1, -1, 1, 3), (1, -1, 1, -1), (1, -1, 2, 0), (1, -1, 2, 1), (1, -1, 2, 2), (1, -1, 2, 3), (1, -1, 2, -1), (1, -1, 3, 0), (1, -1, 3, 1), (1, -1, 3, 2), (1, -1, 3, 3), (1, -1, 3, -1), (1, -1, -1, 0), (1, -1, -1, 1), (1, -1, -1, 2), (1, -1, -1, 3), (1, -1, -1, -1), (2, 0, 0, 0), (2, 0, 0, 1), (2, 0, 0, 2), (2, 0, 0, 3), (2, 0, 0, -1), (2, 0, 1, 0), (2, 0, 1, 1), (2, 0, 1, 2), (2, 0, 1, 3), (2, 0, 1, -1), (2, 0, 2, 0), (2, 0, 2, 1), (2, 0, 2, 2), (2, 0, 2, 3), (2, 0, 2, -1), (2, 0, 3, 0), (2, 0, 3, 1), (2, 0, 3, 2), (2, 0, 3, 3), (2, 0, 3, -1), (2, 0, -1, 0), (2, 0, -1, 1), (2, 0, -1, 2), (2, 0, -1, 3), (2, 0, -1, -1), (2, 1, 0, 0), (2, 1, 0, 1), (2, 1, 0, 2), (2, 1, 0, 3), (2, 1, 0, -1), (2, 1, 1, 0), (2, 1, 1, 1), (2, 1, 1, 2), (2, 1, 1, 3), (2, 1, 1, -1), (2, 1, 2, 0), (2, 1, 2, 1), (2, 1, 2, 2), (2, 1, 2, 3), (2, 1, 2, -1), (2, 1, 3, 0), (2, 1, 3, 1), (2, 1, 3, 2), (2, 1, 3, 3), (2, 1, 3, -1), (2, 1, -1, 0), (2, 1, -1, 1), (2, 1, -1, 2), (2, 1, -1, 3), (2, 1, -1, -1), (2, 2, 0, 0), (2, 2, 0, 1), (2, 2, 0, 2), (2, 2, 0, 3), (2, 2, 0, -1), (2, 2, 1, 0), (2, 2, 1, 1), (2, 2, 1, 2), (2, 2, 1, 3), (2, 2, 1, -1), (2, 2, 2, 0), (2, 2, 2, 1), (2, 2, 2, 2), (2, 2, 2, 3), (2, 2, 2, -1), (2, 2, 3, 0), (2, 2, 3, 1), (2, 2, 3, 2), (2, 2, 3, 3), (2, 2, 3, -1), (2, 2, -1, 0), (2, 2, -1, 1), (2, 2, -1, 2), (2, 2, -1, 3), (2, 2, -1, -1), (2, 3, 0, 0), (2, 3, 0, 1), (2, 3, 0, 2), (2, 3, 0, 3), (2, 3, 0, -1), (2, 3, 1, 0), (2, 3, 1, 1), (2, 3, 1, 2), (2, 3, 1, 3), (2, 3, 1, -1), (2, 3, 2, 0), (2, 3, 2, 1), (2, 3, 2, 2), (2, 3, 2, 3), (2, 3, 2, -1), (2, 3, 3, 0), (2, 3, 3, 1), (2, 3, 3, 2), (2, 3, 3, 3), (2, 3, 3, -1), (2, 3, -1, 0), (2, 3, -1, 1), (2, 3, -1, 2), (2, 3, -1, 3), (2, 3, -1, -1), (2, -1, 0, 0), (2, -1, 0, 1), (2, -1, 0, 2), (2, -1, 0, 3), (2, -1, 0, -1), (2, -1, 1, 0), (2, -1, 1, 1), (2, -1, 1, 2), (2, -1, 1, 3), (2, -1, 1, -1), (2, -1, 2, 0), (2, -1, 2, 1), (2, -1, 2, 2), (2, -1, 2, 3), (2, -1, 2, -1), (2, -1, 3, 0), (2, -1, 3, 1), (2, -1, 3, 2), (2, -1, 3, 3), (2, -1, 3, -1), (2, -1, -1, 0), (2, -1, -1, 1), (2, -1, -1, 2), (2, -1, -1, 3), (2, -1, -1, -1), (3, 0, 0, 0), (3, 0, 0, 1), (3, 0, 0, 2), (3, 0, 0, 3), (3, 0, 0, -1), (3, 0, 1, 0), (3, 0, 1, 1), (3, 0, 1, 2), (3, 0, 1, 3), (3, 0, 1, -1), (3, 0, 2, 0), (3, 0, 2, 1), (3, 0, 2, 2), (3, 0, 2, 3), (3, 0, 2, -1), (3, 0, 3, 0), (3, 0, 3, 1), (3, 0, 3, 2), (3, 0, 3, 3), (3, 0, 3, -1), (3, 0, -1, 0), (3, 0, -1, 1), (3, 0, -1, 2), (3, 0, -1, 3), (3, 0, -1, -1), (3, 1, 0, 0), (3, 1, 0, 1), (3, 1, 0, 2), (3, 1, 0, 3), (3, 1, 0, -1), (3, 1, 1, 0), (3, 1, 1, 1), (3, 1, 1, 2), (3, 1, 1, 3), (3, 1, 1, -1), (3, 1, 2, 0), (3, 1, 2, 1), (3, 1, 2, 2), (3, 1, 2, 3), (3, 1, 2, -1), (3, 1, 3, 0), (3, 1, 3, 1), (3, 1, 3, 2), (3, 1, 3, 3), (3, 1, 3, -1), (3, 1, -1, 0), (3, 1, -1, 1), (3, 1, -1, 2), (3, 1, -1, 3), (3, 1, -1, -1), (3, 2, 0, 0), (3, 2, 0, 1), (3, 2, 0, 2), (3, 2, 0, 3), (3, 2, 0, -1), (3, 2, 1, 0), (3, 2, 1, 1), (3, 2, 1, 2), (3, 2, 1, 3), (3, 2, 1, -1), (3, 2, 2, 0), (3, 2, 2, 1), (3, 2, 2, 2), (3, 2, 2, 3), (3, 2, 2, -1), (3, 2, 3, 0), (3, 2, 3, 1), (3, 2, 3, 2), (3, 2, 3, 3), (3, 2, 3, -1), (3, 2, -1, 0), (3, 2, -1, 1), (3, 2, -1, 2), (3, 2, -1, 3), (3, 2, -1, -1), (3, 3, 0, 0), (3, 3, 0, 1), (3, 3, 0, 2), (3, 3, 0, 3), (3, 3, 0, -1), (3, 3, 1, 0), (3, 3, 1, 1), (3, 3, 1, 2), (3, 3, 1, 3), (3, 3, 1, -1), (3, 3, 2, 0), (3, 3, 2, 1), (3, 3, 2, 2), (3, 3, 2, 3), (3, 3, 2, -1), (3, 3, 3, 0), (3, 3, 3, 1), (3, 3, 3, 2), (3, 3, 3, 3), (3, 3, 3, -1), (3, 3, -1, 0), (3, 3, -1, 1), (3, 3, -1, 2), (3, 3, -1, 3), (3, 3, -1, -1), (3, -1, 0, 0), (3, -1, 0, 1), (3, -1, 0, 2), (3, -1, 0, 3), (3, -1, 0, -1), (3, -1, 1, 0), (3, -1, 1, 1), (3, -1, 1, 2), (3, -1, 1, 3), (3, -1, 1, -1), (3, -1, 2, 0), (3, -1, 2, 1), (3, -1, 2, 2), (3, -1, 2, 3), (3, -1, 2, -1), (3, -1, 3, 0), (3, -1, 3, 1), (3, -1, 3, 2), (3, -1, 3, 3), (3, -1, 3, -1), (3, -1, -1, 0), (3, -1, -1, 1), (3, -1, -1, 2), (3, -1, -1, 3), (3, -1, -1, -1), (-1, 0, 0, 0), (-1, 0, 0, 1), (-1, 0, 0, 2), (-1, 0, 0, 3), (-1, 0, 0, -1), (-1, 0, 1, 0), (-1, 0, 1, 1), (-1, 0, 1, 2), (-1, 0, 1, 3), (-1, 0, 1, -1), (-1, 0, 2, 0), (-1, 0, 2, 1), (-1, 0, 2, 2), (-1, 0, 2, 3), (-1, 0, 2, -1), (-1, 0, 3, 0), (-1, 0, 3, 1), (-1, 0, 3, 2), (-1, 0, 3, 3), (-1, 0, 3, -1), (-1, 0, -1, 0), (-1, 0, -1, 1), (-1, 0, -1, 2), (-1, 0, -1, 3), (-1, 0, -1, -1), (-1, 1, 0, 0), (-1, 1, 0, 1), (-1, 1, 0, 2), (-1, 1, 0, 3), (-1, 1, 0, -1), (-1, 1, 1, 0), (-1, 1, 1, 1), (-1, 1, 1, 2), (-1, 1, 1, 3), (-1, 1, 1, -1), (-1, 1, 2, 0), (-1, 1, 2, 1), (-1, 1, 2, 2), (-1, 1, 2, 3), (-1, 1, 2, -1), (-1, 1, 3, 0), (-1, 1, 3, 1), (-1, 1, 3, 2), (-1, 1, 3, 3), (-1, 1, 3, -1), (-1, 1, -1, 0), (-1, 1, -1, 1), (-1, 1, -1, 2), (-1, 1, -1, 3), (-1, 1, -1, -1), (-1, 2, 0, 0), (-1, 2, 0, 1), (-1, 2, 0, 2), (-1, 2, 0, 3), (-1, 2, 0, -1), (-1, 2, 1, 0), (-1, 2, 1, 1), (-1, 2, 1, 2), (-1, 2, 1, 3), (-1, 2, 1, -1), (-1, 2, 2, 0), (-1, 2, 2, 1), (-1, 2, 2, 2), (-1, 2, 2, 3), (-1, 2, 2, -1), (-1, 2, 3, 0), (-1, 2, 3, 1), (-1, 2, 3, 2), (-1, 2, 3, 3), (-1, 2, 3, -1), (-1, 2, -1, 0), (-1, 2, -1, 1), (-1, 2, -1, 2), (-1, 2, -1, 3), (-1, 2, -1, -1), (-1, 3, 0, 0), (-1, 3, 0, 1), (-1, 3, 0, 2), (-1, 3, 0, 3), (-1, 3, 0, -1), (-1, 3, 1, 0), (-1, 3, 1, 1), (-1, 3, 1, 2), (-1, 3, 1, 3), (-1, 3, 1, -1), (-1, 3, 2, 0), (-1, 3, 2, 1), (-1, 3, 2, 2), (-1, 3, 2, 3), (-1, 3, 2, -1), (-1, 3, 3, 0), (-1, 3, 3, 1), (-1, 3, 3, 2), (-1, 3, 3, 3), (-1, 3, 3, -1), (-1, 3, -1, 0), (-1, 3, -1, 1), (-1, 3, -1, 2), (-1, 3, -1, 3), (-1, 3, -1, -1), (-1, -1, 0, 0), (-1, -1, 0, 1), (-1, -1, 0, 2), (-1, -1, 0, 3), (-1, -1, 0, -1), (-1, -1, 1, 0), (-1, -1, 1, 1), (-1, -1, 1, 2), (-1, -1, 1, 3), (-1, -1, 1, -1), (-1, -1, 2, 0), (-1, -1, 2, 1), (-1, -1, 2, 2), (-1, -1, 2, 3), (-1, -1, 2, -1), (-1, -1, 3, 0), (-1, -1, 3, 1), (-1, -1, 3, 2), (-1, -1, 3, 3), (-1, -1, 3, -1), (-1, -1, -1, 0), (-1, -1, -1, 1), (-1, -1, -1, 2), (-1, -1, -1, 3), (-1, -1, -1, -1)]}
    dancers = {0: Dancer, 1: Dancer, 2: Dancer, 3: People}
    d = Dancer(3, LearningModel(), Reward(), Actions, States, dancers=dancers)
    #print(d._Q["Invite"].actions)
    state = {"Invite": (1, 0, 0, 0), "Dance": (1, 2, 3, 0)}
    d.set_action(state)



